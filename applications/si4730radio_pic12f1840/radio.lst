                           1 ;**********************************************************
                           2 ;  Microchip Enhanced PIC16F1xxx C Compiler (CC16E), v1.00
                           3 ;  Mon Dec 04 17:19:05 2023
                           4 ;**********************************************************
                           5 	.invoke	"c:\p16ecc/include/string"
                           6 	.invoke	"c:\p16ecc/include/pic16e"
                           7 	.invoke	"c:\p16ecc/include/p12f1840"
                           8 
                           9 	.device	"p12f1840", 256, 4096
                          10 
                          11 _$$::	.equ	0x20F0	; stack init. value
                          12 
                          13 	.segment	BANKi (REL)
                          14 RADIO_mode::	.rs	1
                          15 	.segment	BANKi (REL)
                          16 RADIO_volume::	.rs	1
                          17 	.segment	BANKi (REL)
                          18 RADIO_fmFreq::	.rs	2
                          19 	.segment	BANKi (REL)
                          20 RADIO_amFreq::	.rs	2
                          21 
                          22 
                          23 	.segment	CODE2 (REL) RADIO_init:0
                          24 RADIO_init::
                          25 ; :: radio.c #14: LATA  &= ~(1 << 5);
00000: 0x0022             26 	movlb	2
00001: 0x128C             27 	bcf	12, 5
                          28 ; :: radio.c #15: TRISA &= ~(1 << 5);
                          29 	.bsel	268, 140
00002: 0x128C             30 	bcf	12, 5
                          31 ; :: radio.c #16: TMR0_delayMs(100);
00003: 0x3064             32 	movlw	100
00004: 0x001D             33 	movwi	--INDF1
                          34 	.psel	RADIO_init, TMR0_delayMs
00005: 0x2000?            35 	call	TMR0_delayMs
                          36 ; :: radio.c #17: TRISA |= (1 << 5);
00006: 0x0021             37 	movlb	1
00007: 0x168C             38 	bsf	12, 5
                          39 ; :: radio.c #18: TMR0_delayMs(100);
00008: 0x3064             40 	movlw	100
00009: 0x001D             41 	movwi	--INDF1
0000A: 0x2000?            42 	call	TMR0_delayMs
                          43 ; :: radio.c #20: startFM();
                          44 	.psel	TMR0_delayMs, startFM
0000B: 0x2000?            45 	call	startFM
                          46 ; :: radio.c #21: startFM();
0000C: 0x2000?            47 	call	startFM
                          48 	.psel	startFM, RADIO_init
0000D: 0x0008             49 	return
                          50 ; function(s) called::
                          51 	.fcall	RADIO_init, startFM
                          52 	.fcall	RADIO_init, TMR0_delayMs
                          53 
                          54 	.segment	CODE2 (REL) startFM:0
                          55 startFM::
                          56 	.psel	startFM, _$L3
                          57 _$L3:
                          58 ; :: radio.c #26: while ( MODE_KEY_HOLD )
00000: 0x0020             59 	movlb	0
                          60 	.psel	_$L3, _$L5
00001: 0x1A8C             61 	btfsc	12, 5
00002: 0x2800?            62 	goto	_$L5
                          63 ; :: radio.c #26: TMR0_delayMs(5);
00003: 0x3005             64 	movlw	5
00004: 0x001D             65 	movwi	--INDF1
                          66 	.psel	_$L5, TMR0_delayMs
00005: 0x2000?            67 	call	TMR0_delayMs
                          68 	.psel	TMR0_delayMs, _$L3
00006: 0x2800?            69 	goto	_$L3
                          70 	.psel	_$L3, _$L5
                          71 _$L5:
                          72 ; :: radio.c #27: KEY_read();
                          73 	.psel	_$L5, KEY_read
00007: 0x2000?            74 	call	KEY_read
                          75 ; :: radio.c #29: RADIO_mode = FM_MODE;
00008: 0x0020?            76 	.bsel	RADIO_mode
00009: 0x0180?            77 	clrf	RADIO_mode
                          78 ; :: radio.c #30: SI47xx_init();
                          79 	.psel	KEY_read, SI47xx_init
0000A: 0x2000?            80 	call	SI47xx_init
                          81 ; :: radio.c #31: SI47xx_setVolume(RADIO_volume = 63);
0000B: 0x303F             82 	movlw	63
0000C: 0x0020?            83 	.bsel	RADIO_volume
0000D: 0x0080?            84 	movwf	RADIO_volume
0000E: 0x001D             85 	movwi	--INDF1
                          86 	.psel	SI47xx_init, SI47xx_setVolume
0000F: 0x2000?            87 	call	SI47xx_setVolume
                          88 ; :: radio.c #32: SI47xx_setFreq(RADIO_fmFreq);
00010: 0x0020?            89 	.bsel	RADIO_fmFreq
00011: 0x0800?            90 	movf	RADIO_fmFreq, W
00012: 0x001D             91 	movwi	--INDF1
                          92 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
00013: 0x0800?            93 	movf	RADIO_fmFreq+1, W
00014: 0x001D             94 	movwi	--INDF1
                          95 	.psel	SI47xx_setVolume, SI47xx_setFreq
00015: 0x2000?            96 	call	SI47xx_setFreq
                          97 ; :: radio.c #34: RADIO_dispFreq();
                          98 	.psel	SI47xx_setFreq, RADIO_dispFreq
00016: 0x2000?            99 	call	RADIO_dispFreq
                         100 ; :: radio.c #36: OLED_displayChar_16( 7-2, 0, verdana_16x11ptBitmaps_F, 11);
00017: 0x3005            101 	movlw	5
00018: 0x001D            102 	movwi	--INDF1
00019: 0x3000            103 	movlw	0
0001A: 0x001D            104 	movwi	--INDF1
0001B: 0x3000?           105 	movlw	verdana_16x11ptBitmaps_F
0001C: 0x001D            106 	movwi	--INDF1
0001D: 0x3000?           107 	movlw	(verdana_16x11ptBitmaps_F)>>8
0001E: 0x001D            108 	movwi	--INDF1
0001F: 0x300B            109 	movlw	11
00020: 0x001D            110 	movwi	--INDF1
                         111 	.psel	RADIO_dispFreq, OLED_displayChar_16
00021: 0x2000?           112 	call	OLED_displayChar_16
                         113 ; :: radio.c #37: OLED_displayChar_16(20-2, 0, verdana_16x16ptBitmaps_M, 16);
00022: 0x3012            114 	movlw	18
00023: 0x001D            115 	movwi	--INDF1
00024: 0x3000            116 	movlw	0
00025: 0x001D            117 	movwi	--INDF1
00026: 0x3000?           118 	movlw	verdana_16x16ptBitmaps_M
00027: 0x001D            119 	movwi	--INDF1
00028: 0x3000?           120 	movlw	(verdana_16x16ptBitmaps_M)>>8
00029: 0x001D            121 	movwi	--INDF1
0002A: 0x3010            122 	movlw	16
0002B: 0x001D            123 	movwi	--INDF1
0002C: 0x2000?           124 	call	OLED_displayChar_16
                         125 ; :: radio.c #39: OLED_displayChar_8x6_str(12-2, 3, "MHz");
0002D: 0x300A            126 	movlw	10
0002E: 0x001D            127 	movwi	--INDF1
0002F: 0x3003            128 	movlw	3
00030: 0x001D            129 	movwi	--INDF1
00031: 0x3000?           130 	movlw	_$CS1
00032: 0x001D            131 	movwi	--INDF1
00033: 0x3000?           132 	movlw	(_$CS1)>>8
00034: 0x001D            133 	movwi	--INDF1
                         134 	.psel	OLED_displayChar_16, OLED_displayChar_8x6_str
00035: 0x2000?           135 	call	OLED_displayChar_8x6_str
                         136 	.psel	OLED_displayChar_8x6_str, startFM
00036: 0x0008            137 	return
                         138 ; function(s) called::
                         139 	.fcall	startFM, OLED_displayChar_8x6_str
                         140 	.fcall	startFM, OLED_displayChar_16
                         141 	.fcall	startFM, RADIO_dispFreq
                         142 	.fcall	startFM, SI47xx_setFreq
                         143 	.fcall	startFM, SI47xx_setVolume
                         144 	.fcall	startFM, SI47xx_init
                         145 	.fcall	startFM, KEY_read
                         146 	.fcall	startFM, TMR0_delayMs
                         147 
                         148 	.segment	CODE2 (REL) startAM:0
                         149 startAM::
                         150 	.psel	startAM, _$L7
                         151 _$L7:
                         152 ; :: radio.c #44: while ( MODE_KEY_HOLD )
00000: 0x0020            153 	movlb	0
                         154 	.psel	_$L7, _$L9
00001: 0x1A8C            155 	btfsc	12, 5
00002: 0x2800?           156 	goto	_$L9
                         157 ; :: radio.c #44: TMR0_delayMs(5);
00003: 0x3005            158 	movlw	5
00004: 0x001D            159 	movwi	--INDF1
                         160 	.psel	_$L9, TMR0_delayMs
00005: 0x2000?           161 	call	TMR0_delayMs
                         162 	.psel	TMR0_delayMs, _$L7
00006: 0x2800?           163 	goto	_$L7
                         164 	.psel	_$L7, _$L9
                         165 _$L9:
                         166 ; :: radio.c #45: KEY_read();
                         167 	.psel	_$L9, KEY_read
00007: 0x2000?           168 	call	KEY_read
                         169 ; :: radio.c #47: RADIO_mode = AM_MODE;
00008: 0x3001            170 	movlw	1
00009: 0x0020?           171 	.bsel	RADIO_mode
0000A: 0x0080?           172 	movwf	RADIO_mode
                         173 ; :: radio.c #48: SI47xx_init();
                         174 	.psel	KEY_read, SI47xx_init
0000B: 0x2000?           175 	call	SI47xx_init
                         176 ; :: radio.c #49: SI47xx_setVolume(RADIO_volume = 63);
0000C: 0x303F            177 	movlw	63
0000D: 0x0020?           178 	.bsel	RADIO_volume
0000E: 0x0080?           179 	movwf	RADIO_volume
0000F: 0x001D            180 	movwi	--INDF1
                         181 	.psel	SI47xx_init, SI47xx_setVolume
00010: 0x2000?           182 	call	SI47xx_setVolume
                         183 ; :: radio.c #50: SI47xx_setFreq(RADIO_amFreq);
00011: 0x0020?           184 	.bsel	RADIO_amFreq
00012: 0x0800?           185 	movf	RADIO_amFreq, W
00013: 0x001D            186 	movwi	--INDF1
                         187 	.bsel	RADIO_amFreq, RADIO_amFreq+1
00014: 0x0800?           188 	movf	RADIO_amFreq+1, W
00015: 0x001D            189 	movwi	--INDF1
                         190 	.psel	SI47xx_setVolume, SI47xx_setFreq
00016: 0x2000?           191 	call	SI47xx_setFreq
                         192 ; :: radio.c #52: RADIO_dispFreq();
                         193 	.psel	SI47xx_setFreq, RADIO_dispFreq
00017: 0x2000?           194 	call	RADIO_dispFreq
                         195 ; :: radio.c #54: OLED_displayChar_16( 2-2, 0, verdana_16x16ptBitmaps_A, 16);
00018: 0x3000            196 	movlw	0
00019: 0x001D            197 	movwi	--INDF1
0001A: 0x001D            198 	movwi	--INDF1
0001B: 0x3000?           199 	movlw	verdana_16x16ptBitmaps_A
0001C: 0x001D            200 	movwi	--INDF1
0001D: 0x3000?           201 	movlw	(verdana_16x16ptBitmaps_A)>>8
0001E: 0x001D            202 	movwi	--INDF1
0001F: 0x3010            203 	movlw	16
00020: 0x001D            204 	movwi	--INDF1
                         205 	.psel	RADIO_dispFreq, OLED_displayChar_16
00021: 0x2000?           206 	call	OLED_displayChar_16
                         207 ; :: radio.c #55: OLED_displayChar_16(20-2, 0, verdana_16x16ptBitmaps_M, 16);
00022: 0x3012            208 	movlw	18
00023: 0x001D            209 	movwi	--INDF1
00024: 0x3000            210 	movlw	0
00025: 0x001D            211 	movwi	--INDF1
00026: 0x3000?           212 	movlw	verdana_16x16ptBitmaps_M
00027: 0x001D            213 	movwi	--INDF1
00028: 0x3000?           214 	movlw	(verdana_16x16ptBitmaps_M)>>8
00029: 0x001D            215 	movwi	--INDF1
0002A: 0x3010            216 	movlw	16
0002B: 0x001D            217 	movwi	--INDF1
0002C: 0x2000?           218 	call	OLED_displayChar_16
                         219 ; :: radio.c #57: OLED_displayChar_8x6_str(12-2, 3, "KHz");
0002D: 0x300A            220 	movlw	10
0002E: 0x001D            221 	movwi	--INDF1
0002F: 0x3003            222 	movlw	3
00030: 0x001D            223 	movwi	--INDF1
00031: 0x3000?           224 	movlw	_$CS2
00032: 0x001D            225 	movwi	--INDF1
00033: 0x3000?           226 	movlw	(_$CS2)>>8
00034: 0x001D            227 	movwi	--INDF1
                         228 	.psel	OLED_displayChar_16, OLED_displayChar_8x6_str
00035: 0x2000?           229 	call	OLED_displayChar_8x6_str
                         230 	.psel	OLED_displayChar_8x6_str, startAM
00036: 0x0008            231 	return
                         232 ; function(s) called::
                         233 	.fcall	startAM, OLED_displayChar_8x6_str
                         234 	.fcall	startAM, OLED_displayChar_16
                         235 	.fcall	startAM, RADIO_dispFreq
                         236 	.fcall	startAM, SI47xx_setFreq
                         237 	.fcall	startAM, SI47xx_setVolume
                         238 	.fcall	startAM, SI47xx_init
                         239 	.fcall	startAM, KEY_read
                         240 	.fcall	startAM, TMR0_delayMs
                         241 
                         242 	.segment	CODE2 (REL) RADIO_poll:4
                         243 RADIO_poll_$1_key:	.equ	RADIO_poll_$data$+0
                         244 RADIO_poll_$2_delta:	.equ	RADIO_poll_$data$+1
                         245 RADIO_poll_$1:	.equ	RADIO_poll_$data$+2
                         246 RADIO_poll::
                         247 	.psel	RADIO_poll, KEY_read
00000: 0x2000?           248 	call	KEY_read
00001: 0x0870            249 	movf	112, W
00002: 0x0020?           250 	.bsel	RADIO_poll_$data$
00003: 0x0080?           251 	movwf	RADIO_poll_$1_key
                         252 ; :: radio.c #66: switch ( key )	
                         253 ; :: radio.c #67: case MODE_KEY:
00004: 0x0800?           254 	movf	RADIO_poll_$1_key, W
00005: 0x3A01            255 	xorlw	1
                         256 	.psel	KEY_read, _$L12
00006: 0x1903            257 	btfsc	3, 2
00007: 0x2800?           258 	goto	_$L12
                         259 ; :: radio.c #75: case INC_KEY:
00008: 0x0800?           260 	movf	RADIO_poll_$1_key, W
00009: 0x3A02            261 	xorlw	2
                         262 	.psel	_$L12, _$L13
0000A: 0x1903            263 	btfsc	3, 2
0000B: 0x2800?           264 	goto	_$L13
                         265 ; :: radio.c #76: case FAST_INC:
0000C: 0x0800?           266 	movf	RADIO_poll_$1_key, W
0000D: 0x3A04            267 	xorlw	4
0000E: 0x1903            268 	btfsc	3, 2
0000F: 0x2800?           269 	goto	_$L13
                         270 ; :: radio.c #108: case DEC_KEY:
00010: 0x0800?           271 	movf	RADIO_poll_$1_key, W
00011: 0x3A03            272 	xorlw	3
                         273 	.psel	_$L13, _$L15
00012: 0x1903            274 	btfsc	3, 2
00013: 0x2800?           275 	goto	_$L15
                         276 ; :: radio.c #109: case FAST_DEC:
00014: 0x0800?           277 	movf	RADIO_poll_$1_key, W
00015: 0x3A05            278 	xorlw	5
00016: 0x1903            279 	btfsc	3, 2
00017: 0x2800?           280 	goto	_$L15
                         281 	.psel	_$L15, _$L11
00018: 0x2800?           282 	goto	_$L11
                         283 	.psel	_$L11, _$L12
                         284 _$L12:
                         285 ; :: radio.c #68: OLED_clr();
                         286 	.psel	_$L12, OLED_clr
00019: 0x2000?           287 	call	OLED_clr
                         288 ; :: radio.c #69: if ( RADIO_mode == FM_MODE )
0001A: 0x0020?           289 	.bsel	RADIO_mode
0001B: 0x0800?           290 	movf	RADIO_mode, W
                         291 	.psel	OLED_clr, _$L18
0001C: 0x1D03            292 	btfss	3, 2
0001D: 0x2800?           293 	goto	_$L18
                         294 ; :: radio.c #70: startAM();
                         295 	.psel	_$L18, startAM
0001E: 0x2000?           296 	call	startAM
                         297 	.psel	startAM, _$L11
0001F: 0x2800?           298 	goto	_$L11
                         299 	.psel	_$L11, _$L18
                         300 _$L18:
                         301 ; :: radio.c #72: else				startFM();
                         302 	.psel	_$L18, startFM
00020: 0x2000?           303 	call	startFM
                         304 ; :: radio.c #73: break;
                         305 	.psel	startFM, _$L11
00021: 0x2800?           306 	goto	_$L11
                         307 	.psel	_$L11, _$L13
                         308 _$L13:
                         309 ; :: radio.c #77: if ( RADIO_mode == FM_MODE )
00022: 0x0020?           310 	.bsel	RADIO_mode
00023: 0x0800?           311 	movf	RADIO_mode, W
                         312 	.psel	_$L13, _$L21
00024: 0x1D03            313 	btfss	3, 2
00025: 0x2800?           314 	goto	_$L21
                         315 ; :: radio.c #79: delta = RADIO_fmFreq % 50;
00026: 0x3032            316 	movlw	50
00027: 0x001D            317 	movwi	--INDF1
00028: 0x3000            318 	movlw	0
00029: 0x001D            319 	movwi	--INDF1
                         320 	.bsel	RADIO_mode, RADIO_fmFreq
0002A: 0x0800?           321 	movf	RADIO_fmFreq, W
0002B: 0x00F0            322 	movwf	112
                         323 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
0002C: 0x0800?           324 	movf	RADIO_fmFreq+1, W
0002D: 0x00F1            325 	movwf	113
0002E: 0x3001            326 	movlw	1
                         327 	.psel	_$L21, _divmod16
0002F: 0x2000?           328 	call	_divmod16
00030: 0x0870            329 	movf	112, W
                         330 	.bsel	RADIO_fmFreq+1, RADIO_poll_$data$
00031: 0x0080?           331 	movwf	RADIO_poll_$2_delta
                         332 ; :: radio.c #80: if ( key == FAST_INC )
00032: 0x0800?           333 	movf	RADIO_poll_$1_key, W
00033: 0x3A04            334 	xorlw	4
                         335 	.psel	_divmod16, _$L24
00034: 0x1D03            336 	btfss	3, 2
00035: 0x2800?           337 	goto	_$L24
                         338 ; :: radio.c #81: RADIO_fmFreq += 50 - delta;
00036: 0x0800?           339 	movf	RADIO_poll_$2_delta, W
00037: 0x3C32            340 	sublw	50
00038: 0x0080?           341 	movwf	RADIO_poll_$1
00039: 0x3000            342 	movlw	0
0003A: 0x3B7F            343 	subwfb	127, W
0003B: 0x0080?           344 	movwf	RADIO_poll_$1+1
0003C: 0x0800?           345 	movf	RADIO_poll_$1, W
                         346 	.bsel	RADIO_poll_$data$, RADIO_fmFreq
0003D: 0x0780?           347 	addwf	RADIO_fmFreq, F
                         348 	.bsel	RADIO_fmFreq, RADIO_poll_$data$
0003E: 0x0800?           349 	movf	RADIO_poll_$1+1, W
                         350 	.bsel	RADIO_poll_$data$, RADIO_fmFreq+1
0003F: 0x3D80?           351 	addwfc	RADIO_fmFreq+1, F
                         352 	.psel	_$L24, _$L25
00040: 0x2800?           353 	goto	_$L25
                         354 	.psel	_$L25, _$L24
                         355 _$L24:
                         356 ; :: radio.c #83: else					RADIO_fmFreq += 10;
00041: 0x300A            357 	movlw	10
00042: 0x0020?           358 	.bsel	RADIO_fmFreq
00043: 0x0780?           359 	addwf	RADIO_fmFreq, F
00044: 0x3000            360 	movlw	0
                         361 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
00045: 0x3D80?           362 	addwfc	RADIO_fmFreq+1, F
                         363 	.psel	_$L24, _$L25
                         364 _$L25:
                         365 ; :: radio.c #85: if ( RADIO_fmFreq > 10850 )
00046: 0x3062            366 	movlw	98
00047: 0x0020?           367 	.bsel	RADIO_fmFreq
00048: 0x0200?           368 	subwf	RADIO_fmFreq, W
00049: 0x00F0            369 	movwf	0x70
0004A: 0x302A            370 	movlw	42
                         371 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
0004B: 0x3B00?           372 	subwfb	RADIO_fmFreq+1, W
0004C: 0x04F0            373 	iorwf	0x70, F
                         374 	.psel	_$L25, _$L27
0004D: 0x1903            375 	btfsc	3, 2
0004E: 0x1003            376 	bcf	3, 0
0004F: 0x1C03            377 	btfss	3, 0
00050: 0x2800?           378 	goto	_$L27
                         379 ; :: radio.c #86: RADIO_fmFreq = 10850;
00051: 0x3062            380 	movlw	98
                         381 	.bsel	RADIO_fmFreq+1, RADIO_fmFreq
00052: 0x0080?           382 	movwf	RADIO_fmFreq
00053: 0x302A            383 	movlw	42
                         384 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
00054: 0x0080?           385 	movwf	RADIO_fmFreq+1
                         386 _$L27:
                         387 ; :: radio.c #88: (RADIO_fmFreq);
00055: 0x0020?           388 	.bsel	RADIO_fmFreq
00056: 0x0800?           389 	movf	RADIO_fmFreq, W
00057: 0x001D            390 	movwi	--INDF1
                         391 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
00058: 0x0800?           392 	movf	RADIO_fmFreq+1, W
00059: 0x001D            393 	movwi	--INDF1
                         394 	.psel	_$L27, SI47xx_setFreq
0005A: 0x2000?           395 	call	SI47xx_setFreq
                         396 ; :: radio.c #89: RADIO_dispFreq();
                         397 	.psel	SI47xx_setFreq, RADIO_dispFreq
0005B: 0x2000?           398 	call	RADIO_dispFreq
                         399 	.psel	RADIO_dispFreq, _$L11
0005C: 0x2800?           400 	goto	_$L11
                         401 	.psel	_$L11, _$L21
                         402 _$L21:
                         403 ; :: radio.c #93: else							delta = RADIO_amFreq % 10;
0005D: 0x300A            404 	movlw	10
0005E: 0x001D            405 	movwi	--INDF1
0005F: 0x3000            406 	movlw	0
00060: 0x001D            407 	movwi	--INDF1
00061: 0x0020?           408 	.bsel	RADIO_amFreq
00062: 0x0800?           409 	movf	RADIO_amFreq, W
00063: 0x00F0            410 	movwf	112
                         411 	.bsel	RADIO_amFreq, RADIO_amFreq+1
00064: 0x0800?           412 	movf	RADIO_amFreq+1, W
00065: 0x00F1            413 	movwf	113
00066: 0x3001            414 	movlw	1
                         415 	.psel	_$L21, _divmod16
00067: 0x2000?           416 	call	_divmod16
00068: 0x0870            417 	movf	112, W
                         418 	.bsel	RADIO_amFreq+1, RADIO_poll_$data$
00069: 0x0080?           419 	movwf	RADIO_poll_$2_delta
                         420 ; :: radio.c #94: if ( key == FAST_INC )
0006A: 0x0800?           421 	movf	RADIO_poll_$1_key, W
0006B: 0x3A04            422 	xorlw	4
                         423 	.psel	_divmod16, _$L30
0006C: 0x1D03            424 	btfss	3, 2
0006D: 0x2800?           425 	goto	_$L30
                         426 ; :: radio.c #96: RADIO_amFreq += 10 - delta;
0006E: 0x0800?           427 	movf	RADIO_poll_$2_delta, W
0006F: 0x3C0A            428 	sublw	10
00070: 0x0080?           429 	movwf	RADIO_poll_$1
00071: 0x3000            430 	movlw	0
00072: 0x3B7F            431 	subwfb	127, W
00073: 0x0080?           432 	movwf	RADIO_poll_$1+1
00074: 0x0800?           433 	movf	RADIO_poll_$1, W
                         434 	.bsel	RADIO_poll_$data$, RADIO_amFreq
00075: 0x0780?           435 	addwf	RADIO_amFreq, F
                         436 	.bsel	RADIO_amFreq, RADIO_poll_$data$
00076: 0x0800?           437 	movf	RADIO_poll_$1+1, W
                         438 	.bsel	RADIO_poll_$data$, RADIO_amFreq+1
00077: 0x3D80?           439 	addwfc	RADIO_amFreq+1, F
                         440 	.psel	_$L30, _$L31
00078: 0x2800?           441 	goto	_$L31
                         442 	.psel	_$L31, _$L30
                         443 _$L30:
                         444 ; :: radio.c #99: else					RADIO_amFreq++;
00079: 0x0020?           445 	.bsel	RADIO_amFreq
0007A: 0x0A80?           446 	incf	RADIO_amFreq, F
                         447 	.bsel	RADIO_amFreq, RADIO_amFreq+1
0007B: 0x1903            448 	btfsc	3, 2
0007C: 0x0A80?           449 	incf	RADIO_amFreq+1, F
                         450 	.psel	_$L30, _$L31
                         451 _$L31:
                         452 ; :: radio.c #101: if ( RADIO_amFreq > 1650 )
0007D: 0x3072            453 	movlw	114
0007E: 0x0020?           454 	.bsel	RADIO_amFreq
0007F: 0x0200?           455 	subwf	RADIO_amFreq, W
00080: 0x00F0            456 	movwf	0x70
00081: 0x3006            457 	movlw	6
                         458 	.bsel	RADIO_amFreq, RADIO_amFreq+1
00082: 0x3B00?           459 	subwfb	RADIO_amFreq+1, W
00083: 0x04F0            460 	iorwf	0x70, F
                         461 	.psel	_$L31, _$L33
00084: 0x1903            462 	btfsc	3, 2
00085: 0x1003            463 	bcf	3, 0
00086: 0x1C03            464 	btfss	3, 0
00087: 0x2800?           465 	goto	_$L33
                         466 ; :: radio.c #102: RADIO_amFreq = 1650;
00088: 0x3072            467 	movlw	114
                         468 	.bsel	RADIO_amFreq+1, RADIO_amFreq
00089: 0x0080?           469 	movwf	RADIO_amFreq
0008A: 0x3006            470 	movlw	6
                         471 	.bsel	RADIO_amFreq, RADIO_amFreq+1
0008B: 0x0080?           472 	movwf	RADIO_amFreq+1
                         473 _$L33:
                         474 ; :: radio.c #104: (RADIO_amFreq);
0008C: 0x0020?           475 	.bsel	RADIO_amFreq
0008D: 0x0800?           476 	movf	RADIO_amFreq, W
0008E: 0x001D            477 	movwi	--INDF1
                         478 	.bsel	RADIO_amFreq, RADIO_amFreq+1
0008F: 0x0800?           479 	movf	RADIO_amFreq+1, W
00090: 0x001D            480 	movwi	--INDF1
                         481 	.psel	_$L33, SI47xx_setFreq
00091: 0x2000?           482 	call	SI47xx_setFreq
                         483 ; :: radio.c #105: RADIO_dispFreq();
                         484 	.psel	SI47xx_setFreq, RADIO_dispFreq
00092: 0x2000?           485 	call	RADIO_dispFreq
                         486 ; :: radio.c #107: break;
                         487 	.psel	RADIO_dispFreq, _$L11
00093: 0x2800?           488 	goto	_$L11
                         489 	.psel	_$L11, _$L15
                         490 _$L15:
                         491 ; :: radio.c #110: if ( RADIO_mode == FM_MODE )
00094: 0x0020?           492 	.bsel	RADIO_mode
00095: 0x0800?           493 	movf	RADIO_mode, W
                         494 	.psel	_$L15, _$L36
00096: 0x1D03            495 	btfss	3, 2
00097: 0x2800?           496 	goto	_$L36
                         497 ; :: radio.c #112: delta = RADIO_fmFreq % 50;
00098: 0x3032            498 	movlw	50
00099: 0x001D            499 	movwi	--INDF1
0009A: 0x3000            500 	movlw	0
0009B: 0x001D            501 	movwi	--INDF1
                         502 	.bsel	RADIO_mode, RADIO_fmFreq
0009C: 0x0800?           503 	movf	RADIO_fmFreq, W
0009D: 0x00F0            504 	movwf	112
                         505 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
0009E: 0x0800?           506 	movf	RADIO_fmFreq+1, W
0009F: 0x00F1            507 	movwf	113
000A0: 0x3001            508 	movlw	1
                         509 	.psel	_$L36, _divmod16
000A1: 0x2000?           510 	call	_divmod16
000A2: 0x0870            511 	movf	112, W
                         512 	.bsel	RADIO_fmFreq+1, RADIO_poll_$data$
000A3: 0x0080?           513 	movwf	RADIO_poll_$2_delta
                         514 ; :: radio.c #114: if ( key == FAST_DEC )
000A4: 0x0800?           515 	movf	RADIO_poll_$1_key, W
000A5: 0x3A05            516 	xorlw	5
                         517 	.psel	_divmod16, _$L39
000A6: 0x1D03            518 	btfss	3, 2
000A7: 0x2800?           519 	goto	_$L39
                         520 ; :: radio.c #115: RADIO_fmFreq -= delta? delta: 50;
000A8: 0x0800?           521 	movf	RADIO_poll_$2_delta, W
                         522 	.psel	_$L39, _$L42
000A9: 0x1903            523 	btfsc	3, 2
000AA: 0x2800?           524 	goto	_$L42
000AB: 0x0080?           525 	movwf	RADIO_poll_$1
                         526 	.psel	_$L42, _$L43
000AC: 0x2800?           527 	goto	_$L43
                         528 	.psel	_$L43, _$L42
                         529 _$L42:
000AD: 0x3032            530 	movlw	50
000AE: 0x0020?           531 	.bsel	RADIO_poll_$data$
000AF: 0x0080?           532 	movwf	RADIO_poll_$1
                         533 	.psel	_$L42, _$L43
                         534 _$L43:
000B0: 0x0020?           535 	.bsel	RADIO_poll_$data$
000B1: 0x0800?           536 	movf	RADIO_poll_$1, W
                         537 	.bsel	RADIO_poll_$data$, RADIO_fmFreq
000B2: 0x0280?           538 	subwf	RADIO_fmFreq, F
000B3: 0x3980            539 	andlw	128
000B4: 0x1D03            540 	btfss	3, 2
000B5: 0x30FF            541 	movlw	255
                         542 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
000B6: 0x3B80?           543 	subwfb	RADIO_fmFreq+1, F
                         544 	.psel	_$L43, _$L40
000B7: 0x2800?           545 	goto	_$L40
                         546 	.psel	_$L40, _$L39
                         547 _$L39:
                         548 ; :: radio.c #117: else					RADIO_fmFreq -= 10;
000B8: 0x30F6            549 	movlw	246
000B9: 0x0020?           550 	.bsel	RADIO_fmFreq
000BA: 0x0780?           551 	addwf	RADIO_fmFreq, F
000BB: 0x30FF            552 	movlw	255
                         553 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
000BC: 0x3D80?           554 	addwfc	RADIO_fmFreq+1, F
                         555 	.psel	_$L39, _$L40
                         556 _$L40:
                         557 ; :: radio.c #119: if ( RADIO_fmFreq < 8750 )
000BD: 0x302E            558 	movlw	46
000BE: 0x0020?           559 	.bsel	RADIO_fmFreq
000BF: 0x0200?           560 	subwf	RADIO_fmFreq, W
000C0: 0x3022            561 	movlw	34
                         562 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
000C1: 0x3B00?           563 	subwfb	RADIO_fmFreq+1, W
                         564 	.psel	_$L40, _$L45
000C2: 0x1803            565 	btfsc	3, 0
000C3: 0x2800?           566 	goto	_$L45
                         567 ; :: radio.c #120: RADIO_fmFreq = 8750;
000C4: 0x302E            568 	movlw	46
                         569 	.bsel	RADIO_fmFreq+1, RADIO_fmFreq
000C5: 0x0080?           570 	movwf	RADIO_fmFreq
000C6: 0x3022            571 	movlw	34
                         572 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
000C7: 0x0080?           573 	movwf	RADIO_fmFreq+1
                         574 _$L45:
                         575 ; :: radio.c #122: (RADIO_fmFreq);
000C8: 0x0020?           576 	.bsel	RADIO_fmFreq
000C9: 0x0800?           577 	movf	RADIO_fmFreq, W
000CA: 0x001D            578 	movwi	--INDF1
                         579 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
000CB: 0x0800?           580 	movf	RADIO_fmFreq+1, W
000CC: 0x001D            581 	movwi	--INDF1
                         582 	.psel	_$L45, SI47xx_setFreq
000CD: 0x2000?           583 	call	SI47xx_setFreq
                         584 ; :: radio.c #123: RADIO_dispFreq();
                         585 	.psel	SI47xx_setFreq, RADIO_dispFreq
000CE: 0x2000?           586 	call	RADIO_dispFreq
                         587 	.psel	RADIO_dispFreq, _$L11
000CF: 0x2800?           588 	goto	_$L11
                         589 	.psel	_$L11, _$L36
                         590 _$L36:
                         591 ; :: radio.c #127: else							delta = RADIO_amFreq % 10;
000D0: 0x300A            592 	movlw	10
000D1: 0x001D            593 	movwi	--INDF1
000D2: 0x3000            594 	movlw	0
000D3: 0x001D            595 	movwi	--INDF1
000D4: 0x0020?           596 	.bsel	RADIO_amFreq
000D5: 0x0800?           597 	movf	RADIO_amFreq, W
000D6: 0x00F0            598 	movwf	112
                         599 	.bsel	RADIO_amFreq, RADIO_amFreq+1
000D7: 0x0800?           600 	movf	RADIO_amFreq+1, W
000D8: 0x00F1            601 	movwf	113
000D9: 0x3001            602 	movlw	1
                         603 	.psel	_$L36, _divmod16
000DA: 0x2000?           604 	call	_divmod16
000DB: 0x0870            605 	movf	112, W
                         606 	.bsel	RADIO_amFreq+1, RADIO_poll_$data$
000DC: 0x0080?           607 	movwf	RADIO_poll_$2_delta
                         608 ; :: radio.c #129: if ( key == FAST_DEC )
000DD: 0x0800?           609 	movf	RADIO_poll_$1_key, W
000DE: 0x3A05            610 	xorlw	5
                         611 	.psel	_divmod16, _$L48
000DF: 0x1D03            612 	btfss	3, 2
000E0: 0x2800?           613 	goto	_$L48
                         614 ; :: radio.c #130: RADIO_amFreq -= delta? delta: 10;
000E1: 0x0800?           615 	movf	RADIO_poll_$2_delta, W
                         616 	.psel	_$L48, _$L51
000E2: 0x1903            617 	btfsc	3, 2
000E3: 0x2800?           618 	goto	_$L51
000E4: 0x0080?           619 	movwf	RADIO_poll_$1
                         620 	.psel	_$L51, _$L52
000E5: 0x2800?           621 	goto	_$L52
                         622 	.psel	_$L52, _$L51
                         623 _$L51:
000E6: 0x300A            624 	movlw	10
000E7: 0x0020?           625 	.bsel	RADIO_poll_$data$
000E8: 0x0080?           626 	movwf	RADIO_poll_$1
                         627 	.psel	_$L51, _$L52
                         628 _$L52:
000E9: 0x0020?           629 	.bsel	RADIO_poll_$data$
000EA: 0x0800?           630 	movf	RADIO_poll_$1, W
                         631 	.bsel	RADIO_poll_$data$, RADIO_amFreq
000EB: 0x0280?           632 	subwf	RADIO_amFreq, F
000EC: 0x3980            633 	andlw	128
000ED: 0x1D03            634 	btfss	3, 2
000EE: 0x30FF            635 	movlw	255
                         636 	.bsel	RADIO_amFreq, RADIO_amFreq+1
000EF: 0x3B80?           637 	subwfb	RADIO_amFreq+1, F
                         638 	.psel	_$L52, _$L49
000F0: 0x2800?           639 	goto	_$L49
                         640 	.psel	_$L49, _$L48
                         641 _$L48:
                         642 ; :: radio.c #132: else					RADIO_amFreq--;
000F1: 0x30FF            643 	movlw	255
000F2: 0x0020?           644 	.bsel	RADIO_amFreq
000F3: 0x0780?           645 	addwf	RADIO_amFreq, F
                         646 	.bsel	RADIO_amFreq, RADIO_amFreq+1
000F4: 0x3D80?           647 	addwfc	RADIO_amFreq+1, F
                         648 	.psel	_$L48, _$L49
                         649 _$L49:
                         650 ; :: radio.c #134: if ( RADIO_amFreq < 535 )
000F5: 0x3017            651 	movlw	23
000F6: 0x0020?           652 	.bsel	RADIO_amFreq
000F7: 0x0200?           653 	subwf	RADIO_amFreq, W
000F8: 0x3002            654 	movlw	2
                         655 	.bsel	RADIO_amFreq, RADIO_amFreq+1
000F9: 0x3B00?           656 	subwfb	RADIO_amFreq+1, W
                         657 	.psel	_$L49, _$L54
000FA: 0x1803            658 	btfsc	3, 0
000FB: 0x2800?           659 	goto	_$L54
                         660 ; :: radio.c #135: RADIO_amFreq = 535;
000FC: 0x3017            661 	movlw	23
                         662 	.bsel	RADIO_amFreq+1, RADIO_amFreq
000FD: 0x0080?           663 	movwf	RADIO_amFreq
000FE: 0x3002            664 	movlw	2
                         665 	.bsel	RADIO_amFreq, RADIO_amFreq+1
000FF: 0x0080?           666 	movwf	RADIO_amFreq+1
                         667 _$L54:
                         668 ; :: radio.c #137: (RADIO_amFreq);
00100: 0x0020?           669 	.bsel	RADIO_amFreq
00101: 0x0800?           670 	movf	RADIO_amFreq, W
00102: 0x001D            671 	movwi	--INDF1
                         672 	.bsel	RADIO_amFreq, RADIO_amFreq+1
00103: 0x0800?           673 	movf	RADIO_amFreq+1, W
00104: 0x001D            674 	movwi	--INDF1
                         675 	.psel	_$L54, SI47xx_setFreq
00105: 0x2000?           676 	call	SI47xx_setFreq
                         677 ; :: radio.c #138: RADIO_dispFreq();
                         678 	.psel	SI47xx_setFreq, RADIO_dispFreq
00106: 0x2000?           679 	call	RADIO_dispFreq
                         680 ; :: radio.c #140: break;
                         681 	.psel	RADIO_dispFreq, _$L11
                         682 _$L11:
                         683 	.psel	_$L11, RADIO_poll
00107: 0x0008            684 	return
                         685 ; function(s) called::
                         686 	.fcall	RADIO_poll, RADIO_dispFreq
                         687 	.fcall	RADIO_poll, SI47xx_setFreq
                         688 	.fcall	RADIO_poll, _divmod16
                         689 	.fcall	RADIO_poll, startFM
                         690 	.fcall	RADIO_poll, startAM
                         691 	.fcall	RADIO_poll, OLED_clr
                         692 	.fcall	RADIO_poll, KEY_read
                         693 
                         694 	.segment	CODE2 (REL) RADIO_dispFreq:8
                         695 RADIO_dispFreq_$1_freq:	.equ	RADIO_dispFreq_$data$+0
                         696 RADIO_dispFreq_$2_freq0:	.equ	RADIO_dispFreq_$data$+2
                         697 RADIO_dispFreq_$3_freq1:	.equ	RADIO_dispFreq_$data$+3
                         698 RADIO_dispFreq_$4_freq2:	.equ	RADIO_dispFreq_$data$+4
                         699 RADIO_dispFreq_$5_freq3:	.equ	RADIO_dispFreq_$data$+5
                         700 RADIO_dispFreq_$6_freq:	.equ	RADIO_dispFreq_$data$+0
                         701 RADIO_dispFreq_$7_freq0:	.equ	RADIO_dispFreq_$data$+2
                         702 RADIO_dispFreq_$8_freq1:	.equ	RADIO_dispFreq_$data$+3
                         703 RADIO_dispFreq_$9_freq2:	.equ	RADIO_dispFreq_$data$+4
                         704 RADIO_dispFreq_$1:	.equ	RADIO_dispFreq_$data$+6
                         705 RADIO_dispFreq::
                         706 ; :: radio.c #146: if ( RADIO_mode == FM_MODE )
00000: 0x0020?           707 	.bsel	RADIO_mode
00001: 0x0800?           708 	movf	RADIO_mode, W
                         709 	.psel	RADIO_dispFreq, _$L58
00002: 0x1D03            710 	btfss	3, 2
00003: 0x2800?           711 	goto	_$L58
                         712 	.bsel	RADIO_mode, RADIO_fmFreq
00004: 0x0800?           713 	movf	RADIO_fmFreq, W
                         714 	.bsel	RADIO_fmFreq, RADIO_dispFreq_$data$
00005: 0x0080?           715 	movwf	RADIO_dispFreq_$1_freq
                         716 	.bsel	RADIO_dispFreq_$data$, RADIO_fmFreq+1
00006: 0x0800?           717 	movf	RADIO_fmFreq+1, W
                         718 	.bsel	RADIO_fmFreq+1, RADIO_dispFreq_$data$
00007: 0x0080?           719 	movwf	RADIO_dispFreq_$1_freq+1
00008: 0x3010            720 	movlw	16
00009: 0x001D            721 	movwi	--INDF1
0000A: 0x3027            722 	movlw	39
0000B: 0x001D            723 	movwi	--INDF1
0000C: 0x0800?           724 	movf	RADIO_dispFreq_$1_freq, W
0000D: 0x00F0            725 	movwf	112
0000E: 0x0800?           726 	movf	RADIO_dispFreq_$1_freq+1, W
0000F: 0x00F1            727 	movwf	113
00010: 0x3000            728 	movlw	0
                         729 	.psel	_$L58, _divmod16
00011: 0x2000?           730 	call	_divmod16
00012: 0x0870            731 	movf	112, W
00013: 0x0080?           732 	movwf	RADIO_dispFreq_$2_freq0
                         733 ; :: radio.c #149: freq %= 10000;
00014: 0x3010            734 	movlw	16
00015: 0x001D            735 	movwi	--INDF1
00016: 0x3027            736 	movlw	39
00017: 0x001D            737 	movwi	--INDF1
00018: 0x0800?           738 	movf	RADIO_dispFreq_$1_freq, W
00019: 0x00F0            739 	movwf	112
0001A: 0x0800?           740 	movf	RADIO_dispFreq_$1_freq+1, W
0001B: 0x00F1            741 	movwf	113
0001C: 0x3001            742 	movlw	1
0001D: 0x2000?           743 	call	_divmod16
0001E: 0x0870            744 	movf	112, W
0001F: 0x0080?           745 	movwf	RADIO_dispFreq_$1_freq
00020: 0x0871            746 	movf	113, W
00021: 0x0080?           747 	movwf	RADIO_dispFreq_$1_freq+1
00022: 0x30E8            748 	movlw	232
00023: 0x001D            749 	movwi	--INDF1
00024: 0x3003            750 	movlw	3
00025: 0x001D            751 	movwi	--INDF1
00026: 0x0800?           752 	movf	RADIO_dispFreq_$1_freq, W
00027: 0x00F0            753 	movwf	112
00028: 0x0800?           754 	movf	RADIO_dispFreq_$1_freq+1, W
00029: 0x00F1            755 	movwf	113
0002A: 0x3000            756 	movlw	0
0002B: 0x2000?           757 	call	_divmod16
0002C: 0x0870            758 	movf	112, W
0002D: 0x0080?           759 	movwf	RADIO_dispFreq_$3_freq1
                         760 ; :: radio.c #150: freq %= 1000;
0002E: 0x30E8            761 	movlw	232
0002F: 0x001D            762 	movwi	--INDF1
00030: 0x3003            763 	movlw	3
00031: 0x001D            764 	movwi	--INDF1
00032: 0x0800?           765 	movf	RADIO_dispFreq_$1_freq, W
00033: 0x00F0            766 	movwf	112
00034: 0x0800?           767 	movf	RADIO_dispFreq_$1_freq+1, W
00035: 0x00F1            768 	movwf	113
00036: 0x3001            769 	movlw	1
00037: 0x2000?           770 	call	_divmod16
00038: 0x0870            771 	movf	112, W
00039: 0x0080?           772 	movwf	RADIO_dispFreq_$1_freq
0003A: 0x0871            773 	movf	113, W
0003B: 0x0080?           774 	movwf	RADIO_dispFreq_$1_freq+1
0003C: 0x3064            775 	movlw	100
0003D: 0x001D            776 	movwi	--INDF1
0003E: 0x3000            777 	movlw	0
0003F: 0x001D            778 	movwi	--INDF1
00040: 0x0800?           779 	movf	RADIO_dispFreq_$1_freq, W
00041: 0x00F0            780 	movwf	112
00042: 0x0800?           781 	movf	RADIO_dispFreq_$1_freq+1, W
00043: 0x00F1            782 	movwf	113
00044: 0x3000            783 	movlw	0
00045: 0x2000?           784 	call	_divmod16
00046: 0x0870            785 	movf	112, W
00047: 0x0080?           786 	movwf	RADIO_dispFreq_$4_freq2
                         787 ; :: radio.c #151: freq %= 100;
00048: 0x3064            788 	movlw	100
00049: 0x001D            789 	movwi	--INDF1
0004A: 0x3000            790 	movlw	0
0004B: 0x001D            791 	movwi	--INDF1
0004C: 0x0800?           792 	movf	RADIO_dispFreq_$1_freq, W
0004D: 0x00F0            793 	movwf	112
0004E: 0x0800?           794 	movf	RADIO_dispFreq_$1_freq+1, W
0004F: 0x00F1            795 	movwf	113
00050: 0x3001            796 	movlw	1
00051: 0x2000?           797 	call	_divmod16
00052: 0x0870            798 	movf	112, W
00053: 0x0080?           799 	movwf	RADIO_dispFreq_$1_freq
00054: 0x0871            800 	movf	113, W
00055: 0x0080?           801 	movwf	RADIO_dispFreq_$1_freq+1
00056: 0x300A            802 	movlw	10
00057: 0x001D            803 	movwi	--INDF1
00058: 0x3000            804 	movlw	0
00059: 0x001D            805 	movwi	--INDF1
0005A: 0x0800?           806 	movf	RADIO_dispFreq_$1_freq, W
0005B: 0x00F0            807 	movwf	112
0005C: 0x0800?           808 	movf	RADIO_dispFreq_$1_freq+1, W
0005D: 0x00F1            809 	movwf	113
0005E: 0x3000            810 	movlw	0
0005F: 0x2000?           811 	call	_divmod16
00060: 0x0870            812 	movf	112, W
00061: 0x0080?           813 	movwf	RADIO_dispFreq_$5_freq3
                         814 ; :: radio.c #154: OLED_displayChar_16(106, 2, &arial_16x11ptBitmaps[10*22],    11);
00062: 0x306A            815 	movlw	106
00063: 0x001D            816 	movwi	--INDF1
00064: 0x3002            817 	movlw	2
00065: 0x001D            818 	movwi	--INDF1
00066: 0x3000?           819 	movlw	arial_16x11ptBitmaps+220
00067: 0x001D            820 	movwi	--INDF1
00068: 0x3000?           821 	movlw	((arial_16x11ptBitmaps+220))>>8
00069: 0x001D            822 	movwi	--INDF1
0006A: 0x300B            823 	movlw	11
0006B: 0x001D            824 	movwi	--INDF1
                         825 	.psel	_divmod16, OLED_displayChar_16
0006C: 0x2000?           826 	call	OLED_displayChar_16
                         827 ; :: radio.c #155: OLED_displayChar_16(117, 2, &arial_16x11ptBitmaps[freq3*22], 11);
0006D: 0x3075            828 	movlw	117
0006E: 0x001D            829 	movwi	--INDF1
0006F: 0x3002            830 	movlw	2
00070: 0x001D            831 	movwi	--INDF1
00071: 0x0020?           832 	.bsel	RADIO_dispFreq_$data$
00072: 0x0800?           833 	movf	RADIO_dispFreq_$5_freq3, W
00073: 0x00F0            834 	movwf	112
00074: 0x3016            835 	movlw	22
                         836 	.psel	OLED_displayChar_16, _mul8
00075: 0x2000?           837 	call	_mul8
00076: 0x0870            838 	movf	112, W
00077: 0x0080?           839 	movwf	RADIO_dispFreq_$1
00078: 0x0871            840 	movf	113, W
00079: 0x0080?           841 	movwf	RADIO_dispFreq_$1+1
0007A: 0x3000?           842 	movlw	arial_16x11ptBitmaps
0007B: 0x0780?           843 	addwf	RADIO_dispFreq_$1, F
0007C: 0x3000?           844 	movlw	(arial_16x11ptBitmaps)>>8
0007D: 0x3D80?           845 	addwfc	RADIO_dispFreq_$1+1, F
0007E: 0x0800?           846 	movf	RADIO_dispFreq_$1, W
0007F: 0x001D            847 	movwi	--INDF1
00080: 0x0800?           848 	movf	RADIO_dispFreq_$1+1, W
00081: 0x001D            849 	movwi	--INDF1
00082: 0x300B            850 	movlw	11
00083: 0x001D            851 	movwi	--INDF1
                         852 	.psel	_mul8, OLED_displayChar_16
00084: 0x2000?           853 	call	OLED_displayChar_16
                         854 ; :: radio.c #157: if ( freq0 )
00085: 0x0020?           855 	.bsel	RADIO_dispFreq_$data$
00086: 0x0800?           856 	movf	RADIO_dispFreq_$2_freq0, W
                         857 	.psel	OLED_displayChar_16, _$L61
00087: 0x1903            858 	btfsc	3, 2
00088: 0x2800?           859 	goto	_$L61
                         860 ; :: radio.c #158: OLED_displayChar_32x19(46, &arialNarrow_32x19_Bitmaps[(4*19)]);
00089: 0x302E            861 	movlw	46
0008A: 0x001D            862 	movwi	--INDF1
0008B: 0x3000?           863 	movlw	arialNarrow_32x19_Bitmaps+76
0008C: 0x001D            864 	movwi	--INDF1
0008D: 0x3000?           865 	movlw	((arialNarrow_32x19_Bitmaps+76))>>8
0008E: 0x001D            866 	movwi	--INDF1
                         867 	.psel	_$L61, OLED_displayChar_32x19
0008F: 0x2000?           868 	call	OLED_displayChar_32x19
                         869 	.psel	OLED_displayChar_32x19, _$L62
00090: 0x2800?           870 	goto	_$L62
                         871 	.psel	_$L62, _$L61
                         872 _$L61:
                         873 ; :: radio.c #160: else			OLED_displayChar_32x19(46, arialNarrow_32x19_Blank);
00091: 0x302E            874 	movlw	46
00092: 0x001D            875 	movwi	--INDF1
00093: 0x3000?           876 	movlw	arialNarrow_32x19_Blank
00094: 0x001D            877 	movwi	--INDF1
00095: 0x3000?           878 	movlw	(arialNarrow_32x19_Blank)>>8
00096: 0x001D            879 	movwi	--INDF1
                         880 	.psel	_$L61, OLED_displayChar_32x19
00097: 0x2000?           881 	call	OLED_displayChar_32x19
                         882 	.psel	OLED_displayChar_32x19, _$L62
                         883 _$L62:
                         884 ; :: radio.c #162: OLED_displayChar_32x19(66, &arialNarrow_32x19_Bitmaps[freq1*(4*19)]);
00098: 0x3042            885 	movlw	66
00099: 0x001D            886 	movwi	--INDF1
0009A: 0x0020?           887 	.bsel	RADIO_dispFreq_$data$
0009B: 0x0800?           888 	movf	RADIO_dispFreq_$3_freq1, W
0009C: 0x00F0            889 	movwf	112
0009D: 0x304C            890 	movlw	76
                         891 	.psel	_$L62, _mul8
0009E: 0x2000?           892 	call	_mul8
0009F: 0x0870            893 	movf	112, W
000A0: 0x0080?           894 	movwf	RADIO_dispFreq_$1
000A1: 0x0871            895 	movf	113, W
000A2: 0x0080?           896 	movwf	RADIO_dispFreq_$1+1
000A3: 0x3000?           897 	movlw	arialNarrow_32x19_Bitmaps
000A4: 0x0780?           898 	addwf	RADIO_dispFreq_$1, F
000A5: 0x3000?           899 	movlw	(arialNarrow_32x19_Bitmaps)>>8
000A6: 0x3D80?           900 	addwfc	RADIO_dispFreq_$1+1, F
000A7: 0x0800?           901 	movf	RADIO_dispFreq_$1, W
000A8: 0x001D            902 	movwi	--INDF1
000A9: 0x0800?           903 	movf	RADIO_dispFreq_$1+1, W
000AA: 0x001D            904 	movwi	--INDF1
                         905 	.psel	_mul8, OLED_displayChar_32x19
000AB: 0x2000?           906 	call	OLED_displayChar_32x19
                         907 ; :: radio.c #163: OLED_displayChar_32x19(86, &arialNarrow_32x19_Bitmaps[freq2*(4*19)]);
000AC: 0x3056            908 	movlw	86
000AD: 0x001D            909 	movwi	--INDF1
000AE: 0x0020?           910 	.bsel	RADIO_dispFreq_$data$
000AF: 0x0800?           911 	movf	RADIO_dispFreq_$4_freq2, W
000B0: 0x00F0            912 	movwf	112
000B1: 0x304C            913 	movlw	76
                         914 	.psel	OLED_displayChar_32x19, _mul8
000B2: 0x2000?           915 	call	_mul8
000B3: 0x0870            916 	movf	112, W
000B4: 0x0080?           917 	movwf	RADIO_dispFreq_$1
000B5: 0x0871            918 	movf	113, W
000B6: 0x0080?           919 	movwf	RADIO_dispFreq_$1+1
000B7: 0x3000?           920 	movlw	arialNarrow_32x19_Bitmaps
000B8: 0x0780?           921 	addwf	RADIO_dispFreq_$1, F
000B9: 0x3000?           922 	movlw	(arialNarrow_32x19_Bitmaps)>>8
000BA: 0x3D80?           923 	addwfc	RADIO_dispFreq_$1+1, F
000BB: 0x0800?           924 	movf	RADIO_dispFreq_$1, W
000BC: 0x001D            925 	movwi	--INDF1
000BD: 0x0800?           926 	movf	RADIO_dispFreq_$1+1, W
000BE: 0x001D            927 	movwi	--INDF1
                         928 	.psel	_mul8, OLED_displayChar_32x19
000BF: 0x2000?           929 	call	OLED_displayChar_32x19
                         930 	.psel	OLED_displayChar_32x19, _$L59
000C0: 0x2800?           931 	goto	_$L59
                         932 	.psel	_$L59, _$L58
                         933 _$L58:
000C1: 0x0020?           934 	.bsel	RADIO_amFreq
000C2: 0x0800?           935 	movf	RADIO_amFreq, W
                         936 	.bsel	RADIO_amFreq, RADIO_dispFreq_$data$
000C3: 0x0080?           937 	movwf	RADIO_dispFreq_$6_freq
                         938 	.bsel	RADIO_dispFreq_$data$, RADIO_amFreq+1
000C4: 0x0800?           939 	movf	RADIO_amFreq+1, W
                         940 	.bsel	RADIO_amFreq+1, RADIO_dispFreq_$data$
000C5: 0x0080?           941 	movwf	RADIO_dispFreq_$6_freq+1
000C6: 0x30E8            942 	movlw	232
000C7: 0x001D            943 	movwi	--INDF1
000C8: 0x3003            944 	movlw	3
000C9: 0x001D            945 	movwi	--INDF1
000CA: 0x0800?           946 	movf	RADIO_dispFreq_$6_freq, W
000CB: 0x00F0            947 	movwf	112
000CC: 0x0800?           948 	movf	RADIO_dispFreq_$6_freq+1, W
000CD: 0x00F1            949 	movwf	113
000CE: 0x3000            950 	movlw	0
                         951 	.psel	_$L58, _divmod16
000CF: 0x2000?           952 	call	_divmod16
000D0: 0x0870            953 	movf	112, W
000D1: 0x0080?           954 	movwf	RADIO_dispFreq_$7_freq0
                         955 ; :: radio.c #168: freq %= 1000;
000D2: 0x30E8            956 	movlw	232
000D3: 0x001D            957 	movwi	--INDF1
000D4: 0x3003            958 	movlw	3
000D5: 0x001D            959 	movwi	--INDF1
000D6: 0x0800?           960 	movf	RADIO_dispFreq_$6_freq, W
000D7: 0x00F0            961 	movwf	112
000D8: 0x0800?           962 	movf	RADIO_dispFreq_$6_freq+1, W
000D9: 0x00F1            963 	movwf	113
000DA: 0x3001            964 	movlw	1
000DB: 0x2000?           965 	call	_divmod16
000DC: 0x0870            966 	movf	112, W
000DD: 0x0080?           967 	movwf	RADIO_dispFreq_$6_freq
000DE: 0x0871            968 	movf	113, W
000DF: 0x0080?           969 	movwf	RADIO_dispFreq_$6_freq+1
000E0: 0x3064            970 	movlw	100
000E1: 0x001D            971 	movwi	--INDF1
000E2: 0x3000            972 	movlw	0
000E3: 0x001D            973 	movwi	--INDF1
000E4: 0x0800?           974 	movf	RADIO_dispFreq_$6_freq, W
000E5: 0x00F0            975 	movwf	112
000E6: 0x0800?           976 	movf	RADIO_dispFreq_$6_freq+1, W
000E7: 0x00F1            977 	movwf	113
000E8: 0x3000            978 	movlw	0
000E9: 0x2000?           979 	call	_divmod16
000EA: 0x0870            980 	movf	112, W
000EB: 0x0080?           981 	movwf	RADIO_dispFreq_$8_freq1
                         982 ; :: radio.c #169: freq %= 100;
000EC: 0x3064            983 	movlw	100
000ED: 0x001D            984 	movwi	--INDF1
000EE: 0x3000            985 	movlw	0
000EF: 0x001D            986 	movwi	--INDF1
000F0: 0x0800?           987 	movf	RADIO_dispFreq_$6_freq, W
000F1: 0x00F0            988 	movwf	112
000F2: 0x0800?           989 	movf	RADIO_dispFreq_$6_freq+1, W
000F3: 0x00F1            990 	movwf	113
000F4: 0x3001            991 	movlw	1
000F5: 0x2000?           992 	call	_divmod16
000F6: 0x0870            993 	movf	112, W
000F7: 0x0080?           994 	movwf	RADIO_dispFreq_$6_freq
000F8: 0x0871            995 	movf	113, W
000F9: 0x0080?           996 	movwf	RADIO_dispFreq_$6_freq+1
000FA: 0x300A            997 	movlw	10
000FB: 0x001D            998 	movwi	--INDF1
000FC: 0x3000            999 	movlw	0
000FD: 0x001D            1000 	movwi	--INDF1
000FE: 0x0800?           1001 	movf	RADIO_dispFreq_$6_freq, W
000FF: 0x00F0            1002 	movwf	112
00100: 0x0800?           1003 	movf	RADIO_dispFreq_$6_freq+1, W
00101: 0x00F1            1004 	movwf	113
00102: 0x3000            1005 	movlw	0
00103: 0x2000?           1006 	call	_divmod16
00104: 0x0870            1007 	movf	112, W
00105: 0x0080?           1008 	movwf	RADIO_dispFreq_$9_freq2
                         1009 ; :: radio.c #170: freq %= 10;
00106: 0x300A            1010 	movlw	10
00107: 0x001D            1011 	movwi	--INDF1
00108: 0x3000            1012 	movlw	0
00109: 0x001D            1013 	movwi	--INDF1
0010A: 0x0800?           1014 	movf	RADIO_dispFreq_$6_freq, W
0010B: 0x00F0            1015 	movwf	112
0010C: 0x0800?           1016 	movf	RADIO_dispFreq_$6_freq+1, W
0010D: 0x00F1            1017 	movwf	113
0010E: 0x3001            1018 	movlw	1
0010F: 0x2000?           1019 	call	_divmod16
00110: 0x0870            1020 	movf	112, W
00111: 0x0080?           1021 	movwf	RADIO_dispFreq_$6_freq
00112: 0x0871            1022 	movf	113, W
00113: 0x0080?           1023 	movwf	RADIO_dispFreq_$6_freq+1
                         1024 ; :: radio.c #172: if ( freq0 )
00114: 0x0800?           1025 	movf	RADIO_dispFreq_$7_freq0, W
                         1026 	.psel	_divmod16, _$L64
00115: 0x1903            1027 	btfsc	3, 2
00116: 0x2800?           1028 	goto	_$L64
                         1029 ; :: radio.c #173: OLED_displayChar_32x19(46, &arialNarrow_32x19_Bitmaps[(4*19)]);
00117: 0x302E            1030 	movlw	46
00118: 0x001D            1031 	movwi	--INDF1
00119: 0x3000?           1032 	movlw	arialNarrow_32x19_Bitmaps+76
0011A: 0x001D            1033 	movwi	--INDF1
0011B: 0x3000?           1034 	movlw	((arialNarrow_32x19_Bitmaps+76))>>8
0011C: 0x001D            1035 	movwi	--INDF1
                         1036 	.psel	_$L64, OLED_displayChar_32x19
0011D: 0x2000?           1037 	call	OLED_displayChar_32x19
                         1038 	.psel	OLED_displayChar_32x19, _$L65
0011E: 0x2800?           1039 	goto	_$L65
                         1040 	.psel	_$L65, _$L64
                         1041 _$L64:
                         1042 ; :: radio.c #175: else            OLED_displayChar_32x19(46, arialNarrow_32x19_Blank);
0011F: 0x302E            1043 	movlw	46
00120: 0x001D            1044 	movwi	--INDF1
00121: 0x3000?           1045 	movlw	arialNarrow_32x19_Blank
00122: 0x001D            1046 	movwi	--INDF1
00123: 0x3000?           1047 	movlw	(arialNarrow_32x19_Blank)>>8
00124: 0x001D            1048 	movwi	--INDF1
                         1049 	.psel	_$L64, OLED_displayChar_32x19
00125: 0x2000?           1050 	call	OLED_displayChar_32x19
                         1051 	.psel	OLED_displayChar_32x19, _$L65
                         1052 _$L65:
                         1053 ; :: radio.c #177: OLED_displayChar_32x19( 66, &arialNarrow_32x19_Bitmaps[freq1*(4*19)]);
00126: 0x3042            1054 	movlw	66
00127: 0x001D            1055 	movwi	--INDF1
00128: 0x0020?           1056 	.bsel	RADIO_dispFreq_$data$
00129: 0x0800?           1057 	movf	RADIO_dispFreq_$8_freq1, W
0012A: 0x00F0            1058 	movwf	112
0012B: 0x304C            1059 	movlw	76
                         1060 	.psel	_$L65, _mul8
0012C: 0x2000?           1061 	call	_mul8
0012D: 0x0870            1062 	movf	112, W
0012E: 0x0080?           1063 	movwf	RADIO_dispFreq_$1
0012F: 0x0871            1064 	movf	113, W
00130: 0x0080?           1065 	movwf	RADIO_dispFreq_$1+1
00131: 0x3000?           1066 	movlw	arialNarrow_32x19_Bitmaps
00132: 0x0780?           1067 	addwf	RADIO_dispFreq_$1, F
00133: 0x3000?           1068 	movlw	(arialNarrow_32x19_Bitmaps)>>8
00134: 0x3D80?           1069 	addwfc	RADIO_dispFreq_$1+1, F
00135: 0x0800?           1070 	movf	RADIO_dispFreq_$1, W
00136: 0x001D            1071 	movwi	--INDF1
00137: 0x0800?           1072 	movf	RADIO_dispFreq_$1+1, W
00138: 0x001D            1073 	movwi	--INDF1
                         1074 	.psel	_mul8, OLED_displayChar_32x19
00139: 0x2000?           1075 	call	OLED_displayChar_32x19
                         1076 ; :: radio.c #178: OLED_displayChar_32x19( 86, &arialNarrow_32x19_Bitmaps[freq2*(4*19)]);
0013A: 0x3056            1077 	movlw	86
0013B: 0x001D            1078 	movwi	--INDF1
0013C: 0x0020?           1079 	.bsel	RADIO_dispFreq_$data$
0013D: 0x0800?           1080 	movf	RADIO_dispFreq_$9_freq2, W
0013E: 0x00F0            1081 	movwf	112
0013F: 0x304C            1082 	movlw	76
                         1083 	.psel	OLED_displayChar_32x19, _mul8
00140: 0x2000?           1084 	call	_mul8
00141: 0x0870            1085 	movf	112, W
00142: 0x0080?           1086 	movwf	RADIO_dispFreq_$1
00143: 0x0871            1087 	movf	113, W
00144: 0x0080?           1088 	movwf	RADIO_dispFreq_$1+1
00145: 0x3000?           1089 	movlw	arialNarrow_32x19_Bitmaps
00146: 0x0780?           1090 	addwf	RADIO_dispFreq_$1, F
00147: 0x3000?           1091 	movlw	(arialNarrow_32x19_Bitmaps)>>8
00148: 0x3D80?           1092 	addwfc	RADIO_dispFreq_$1+1, F
00149: 0x0800?           1093 	movf	RADIO_dispFreq_$1, W
0014A: 0x001D            1094 	movwi	--INDF1
0014B: 0x0800?           1095 	movf	RADIO_dispFreq_$1+1, W
0014C: 0x001D            1096 	movwi	--INDF1
                         1097 	.psel	_mul8, OLED_displayChar_32x19
0014D: 0x2000?           1098 	call	OLED_displayChar_32x19
                         1099 ; :: radio.c #179: OLED_displayChar_32x19(106, &arialNarrow_32x19_Bitmaps[freq *(4*19)]);
0014E: 0x306A            1100 	movlw	106
0014F: 0x001D            1101 	movwi	--INDF1
00150: 0x0020?           1102 	.bsel	RADIO_dispFreq_$data$
00151: 0x0800?           1103 	movf	RADIO_dispFreq_$6_freq, W
00152: 0x0080?           1104 	movwf	RADIO_dispFreq_$1
00153: 0x0800?           1105 	movf	RADIO_dispFreq_$6_freq+1, W
00154: 0x0080?           1106 	movwf	RADIO_dispFreq_$1+1
00155: 0x304C            1107 	movlw	76
00156: 0x001D            1108 	movwi	--INDF1
00157: 0x3000            1109 	movlw	0
00158: 0x001D            1110 	movwi	--INDF1
00159: 0x3000?           1111 	movlw	RADIO_dispFreq_$1
0015A: 0x0084            1112 	movwf	FSR0L
0015B: 0x3000?           1113 	movlw	RADIO_dispFreq_$1>>8
0015C: 0x0085            1114 	movwf	FSR0H
                         1115 	.psel	OLED_displayChar_32x19, _mul16indf
0015D: 0x2000?           1116 	call	_mul16indf
0015E: 0x3000?           1117 	movlw	arialNarrow_32x19_Bitmaps
0015F: 0x0780?           1118 	addwf	RADIO_dispFreq_$1, F
00160: 0x3000?           1119 	movlw	(arialNarrow_32x19_Bitmaps)>>8
00161: 0x3D80?           1120 	addwfc	RADIO_dispFreq_$1+1, F
00162: 0x0800?           1121 	movf	RADIO_dispFreq_$1, W
00163: 0x001D            1122 	movwi	--INDF1
00164: 0x0800?           1123 	movf	RADIO_dispFreq_$1+1, W
00165: 0x001D            1124 	movwi	--INDF1
                         1125 	.psel	_mul16indf, OLED_displayChar_32x19
00166: 0x2000?           1126 	call	OLED_displayChar_32x19
                         1127 	.psel	OLED_displayChar_32x19, _$L59
                         1128 _$L59:
                         1129 	.psel	_$L59, RADIO_dispFreq
00167: 0x0008            1130 	return
                         1131 ; function(s) called::
                         1132 	.fcall	RADIO_dispFreq, _mul16indf
                         1133 	.fcall	RADIO_dispFreq, OLED_displayChar_32x19
                         1134 	.fcall	RADIO_dispFreq, _mul8
                         1135 	.fcall	RADIO_dispFreq, OLED_displayChar_16
                         1136 	.fcall	RADIO_dispFreq, _divmod16
                         1137 
                         1138 	.segment	CODEi (REL)
00000: 0x3006            1139 	movlw	6
00001: 0x0020?           1140 	.bsel	RADIO_fmFreq
00002: 0x0080?           1141 	movwf	RADIO_fmFreq
00003: 0x3027            1142 	movlw	39
                         1143 	.bsel	RADIO_fmFreq, RADIO_fmFreq+1
00004: 0x0080?           1144 	movwf	RADIO_fmFreq+1
00005: 0x3026            1145 	movlw	38
                         1146 	.bsel	RADIO_fmFreq+1, RADIO_amFreq
00006: 0x0080?           1147 	movwf	RADIO_amFreq
00007: 0x3002            1148 	movlw	2
                         1149 	.bsel	RADIO_amFreq, RADIO_amFreq+1
00008: 0x0080?           1150 	movwf	RADIO_amFreq+1
                         1151 
                         1152 	.segment	CONSTi (REL)
                         1153 _$CS1:
00000: 0x344D            1154 	retlw	77
00001: 0x3448            1155 	retlw	72
00002: 0x347A            1156 	retlw	122
00003: 0x3400            1157 	retlw	0
                         1158 
                         1159 	.segment	CONSTi (REL)
                         1160 _$CS2:
00000: 0x344B            1161 	retlw	75
00001: 0x3448            1162 	retlw	72
00002: 0x347A            1163 	retlw	122
00003: 0x3400            1164 	retlw	0
                         1165 
                         1166 	.end
